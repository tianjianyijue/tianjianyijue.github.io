name: "构建和部署"
on:
  push:
    branches:
      - main  # 监听主分支
      - master  # 监听主分支
    paths-ignore:
      - .gitignore  # 忽略 .gitignore 文件的变动
      - README.md  # 忽略 README.md 文件的变动
      - LICENSE  # 忽略 LICENSE 文件的变动

  # 允许从 Actions 标签手动运行该工作流
  workflow_dispatch:

permissions:
  contents: read  # 允许读取仓库内容
  pages: write  # 允许写入 GitHub Pages
  id-token: write  # 允许写入 ID token

# 允许并发部署，每次只允许一个部署在进行中
concurrency:
  group: "pages"
  cancel-in-progress: true  # 如果有新部署请求，会取消当前进行中的部署

jobs:
  build:
    runs-on: ubuntu-latest  # 在 Ubuntu 最新版上运行

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 拉取完整的 git 历史记录
          # submodules: true
          # 如果使用 Chirpy Starter 中的 'assets' git 子模块，请取消注释上述内容
          # (参考：https://github.com/cotes2020/chirpy-starter/tree/main/assets)

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4  # 配置 GitHub Pages

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1  # 设置 Ruby 环境
        with:
          ruby-version: 3.3  # 使用 Ruby 版本 3.3
          bundler-cache: true  # 启用 bundler 缓存，以提高性能

      - name: Build site
        run: bundle exec jekyll b -d "_site${{ steps.pages.outputs.base_path }}"  # 使用 Jekyll 构建网站
        env:
          JEKYLL_ENV: "production"  # 设置 Jekyll 环境为生产环境

      - name: Test site
        run: |
            bundle exec htmlproofer _site  # 使用 htmlproofer 测试生成的网站
            --disable-external  # 禁用外部链接检查
            --ignore-urls "/^http:\/\/127.0.0.1/,/^http:\/\/0.0.0.0/,/^http:\/\/localhost/"  # 忽略本地地址

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3  # 上传生成的静态网站
        with:
          path: "_site${{ steps.pages.outputs.base_path }}"  # 指定上传目录

  deploy:
    environment:
      name: github-pages  # 部署到 GitHub Pages 环境
      url: ${{ steps.deployment.outputs.page_url }}  # 部署后网站的 URL
    runs-on: ubuntu-latest  # 在 Ubuntu 最新版上运行
    needs: build  # 依赖于 build 作业的成功
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4  # 使用 GitHub Actions 部署到 GitHub Pages
